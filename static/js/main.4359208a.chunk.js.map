{"version":3,"sources":["components/common/AppBar.tsx","api/client.ts","utils/hooks/general.ts","config.ts","api/hooks.ts","api/commands.ts","api/utils.ts","components/shared/ListItem.tsx","components/pages/Home.tsx","components/pages/ProductPage.tsx","components/shared/Form/Input.tsx","components/shared/Form/Form.tsx","components/pages/AdminPage.tsx","pages.ts","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","createUseStyles","root","display","alignItems","justifyContent","padding","height","marginBottom","logo","userSelect","cursor","fontSize","color","textShadow","AppBar","history","useHistory","theme","useTheme","classes","className","onClick","push","Client","url","this","args","Object","entries","map","e","JSON","stringify","join","command","Promise","resolve","reject","once","cmd","exec","makeArguments","reqUrl","fetch","then","response","json","parsed_response","console","log","catch","Command","status","data","useForkedState","fn","ref","useRef","signal","useSignal","current","value","setState","val","useEffect","id","useState","cli","config","useCommand","a","_args","execute","rq","ProductInfo","token","ProductList","volume","ProductCreate","isLoaded","request","position","flexBasis","flexGrow","minWidth","borderRadius","margin","background","transition","image","top","left","transform","minHeight","width","filter","props","available","imageWrapper","overflow","borderTopRightRadius","borderTopLeftRadius","boxShadow","palette","primary","main","title","textWrapper","ListItem","handleRedirect","src","media_url","alt","name","style","opacity","description","flex","list","flexWrap","flexDirection","maxWidth","bgWrapper","maxHeight","zIndex","Home","listRq","primaryMain","right","type","timeout","key","ProductPage","useParams","productRq","product","fluid","input","outline","border","borderColor","Input","initialValue","onChange","InputProps","undefined","ms","clearTimeout","setTimeout","useTimeout","doTimeout","event","preventDefault","currentTarget","Form","children","onSubmit","AdminPage","target","forEach","property","querySelector","makeDataFromInput","placeholder","freeze","path","pattern","RegExp","label","pathTree","exact","component","exactPath","params","App","pages","p","routeProps","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4359208a.chunk.js","sourcesContent":["import React from \"react\";\nimport { useTheme, createUseStyles } from \"react-jss\";\nimport { useHistory } from \"react-router-dom\";\n\nlet useStyles = createUseStyles(() => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: \"0 20px\",\n        height: \"104px\",\n        marginBottom: \"30px\"\n    },\n    logo: {\n        userSelect: \"none\",\n        cursor: \"pointer\",\n        fontSize: \"56px\",\n        color: \"#7bc69f\",\n        textShadow: \"1px -3px #000000\",\n    }\n}));\n\n// const PATH_MAP = {\n//     \"/\": \"Home\",\n//     \"/product/\": \"Home > Product\"\n// }\n\n// const mapPathname = (pathname: string) => {\n//     if(pathname === \"/\") return PATH_MAP[\"/\"];\n//     if(pathname.split(\"/\")[1] === \"product\") return PATH_MAP[\"/product/\"]\n\n//     return PATH_MAP[pathname as keyof typeof PATH_MAP]\n// }\n\nconst AppBar = () => {\n    const history = useHistory();\n\n    const theme = useTheme();\n    const classes = useStyles({theme});\n    \n    return <div className={`${classes.root} branded-background`}>\n        <h1 className={`logo-font ${classes.logo}`} onClick={() => history.push(\"/\")}>Wyprawka Melisski</h1>\n    </div>\n}\n\nexport default AppBar;","export type TResponse = {status: number, message?: string, data: any};\n\nexport interface IClient {\n    url: string\n}\n\nexport class Client implements IClient {\n    url: string\n\n    constructor(url: string) {\n        this.url = url;\n    }\n\n    makeArguments(args: {[key: string]: string}) {\n        return Object.entries(args).map((e => `${e[0]}=${typeof e[1] === \"object\" ? JSON.stringify(e[1]) : e[1]}`)).join(\"&\");\n    }\n\n    execute(command: ICommand) {\n        return new Promise<{status: number, data: any}>((resolve, reject) => {\n            let once = false;\n            const cmd = command.exec[0];\n            const args = this.makeArguments(command.exec[1]);\n    \n            const reqUrl = `${this.url}${cmd}?${args}`;\n\n            const handleResolve = (response: any) => {\n                if(!once) {\n                    once = true;\n                    \n                    const parsed_response = response\n                    \n                    console.log(\"📶\", cmd, \"=>\", parsed_response);\n                    resolve(parsed_response);\n                }\n                \n            }\n\n            fetch(reqUrl)\n                .then(response => response.json())\n                .then(handleResolve)\n                .catch(reject);\n        })\n    }\n}\n\n\nexport interface ICommand {\n    exec: [string, {[key: string]: any}];\n    status: number;\n\n    parse(status: number, data: any): any\n}\n\nexport class Command implements ICommand {\n    exec: [string, {[key: string]: any}];\n    status: number;\n\n    constructor(exec: [string, {[key: string]: any}]) {\n        this.exec = exec;\n        this.status = 0;\n    }\n\n    parse(status: number, data: any) {\n        return data;\n    }\n}","import { useState, useRef, useEffect } from \"react\";\n\nexport const useForkedState = <T extends any[], R>(fn: (...args: T) => R, ...args: T) => {\n    const ref = useRef(null as unknown as [R, (value: R) => void]);\n    const signal = useSignal();\n\n    if(ref.current === null) {\n        const value: R = fn(...args);\n        const setState = (val: R) => { ref.current[0] = val; signal(); }\n\n        ref.current = [ value, setState ];\n    }\n\n    useEffect(() => { \n        const value = fn(...args);\n\n        if(ref.current[0] !== value) \n            ref.current[1](value); \n    }, [fn, args]);\n\n    return ref.current;\n}\n\nlet id = 0;\nexport const useSignal = () => {\n    const [, setState] = useState(0);\n\n    const signal = () => {\n        setState(id++);\n    }\n\n    return signal;\n}","//export const HOST_URL = /*'http://localhost:5001/baby-shopping-list/us-central1/'*/\n\n\nexport default {\n    host_url: 'https://us-central1-baby-shopping-list.cloudfunctions.net/'\n}","import { useRef } from 'react';\nimport { Client } from './client';\nimport { useSignal } from '../utils/hooks/general';\nimport config from '../config';\n\nconst HOST_URL = config.host_url;\nconst cli = new Client(HOST_URL);\n\nexport const useCommand = (command: any, ...args: any[]) => {\n    const ref = useRef(null as unknown as { status: number, data?: any, message?: string });\n    const signal = useSignal();\n    \n    if(ref.current === null) {\n        ref.current = { status: 102 };\n        \n        const fn = async () => {\n            const _args = args || [];\n            \n            const rq = await cli.execute(new command(..._args))\n            ref.current = rq;\n            signal();\n        }\n        fn();\n    }\n    \n    return ref.current;\n}","import { Command } from \"./client\";\nimport { Product } from \"../types\";\n\nexport class ProductInfo extends Command {\n    constructor(token: string) {\n        super([\"productInfo\", { token }]);\n    }\n\n    parse(status: number, data: Product) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class ProductList extends Command {\n    constructor(volume?: number) {\n        super([\"productList\", { volume }]);\n    }\n\n    parse(status: number, data: Product) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class ProductCreate extends Command {\n    constructor(data: {name: string, description: string, url: string, media_url: string, available?: boolean}) {\n        super([\"productCreate\", data]);\n    }\n\n    parse(status: number, data: Product) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}","export const isLoaded = (request: any) => {\n    return request !== null && request.status !== 102\n}","import React from \"react\";\nimport { createUseStyles, useTheme } from \"react-jss\";\nimport { Theme, Product } from \"../../types\";\nimport { useHistory } from \"react-router-dom\";\n\nlet useStyles = createUseStyles((theme: Theme) => ({\n    root: {\n        position: \"relative\",\n        flexBasis: \"30%\",\n        flexGrow: 1,\n        minWidth: \"200px\",\n        borderRadius: \"8px\",\n        margin: \"0 10px 15px\",\n        background: \"white\",\n        transition: \"background 255ms ease\",\n        \n        \"&:hover\": {\n            background: \"#0000000a\"\n        }\n    },\n    image: {\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\",\n        minWidth: \"100%\",\n        minHeight: \"100%\",\n        width: \"100%\",\n        height: \"auto\",\n        filter: (props: {available: boolean}) => !props.available ? \"grayscale(1)\" : \"none\",\n        cursor: \"pointer\"\n    },\n    imageWrapper: {\n        position: \"relative\",\n        overflow: \"hidden\",\n        width: \"100%\",\n        minWidth: \"inherit\",\n        height: \"350px\",\n        background: \"#eee\",\n        borderTopRightRadius: \"8px\",\n        borderTopLeftRadius: \"8px\",\n        boxShadow: `0 1px 2px 0 rgba(${theme.palette.primary.main},.3), 0 2px 6px 2px rgba(60,64,67,.15)`\n    },\n    title: {\n        cursor: \"pointer\",\n        color: theme.palette.primary.main\n    },\n    textWrapper: {\n        padding: \"16px\"\n    },\n    \"@media only screen and (max-width: 600px)\": {\n        root: {\n            flexBasis: \"99%\",\n        }\n    },\n    \"@media only screen and (min-width: 601px) and (max-width: 960px)\": {\n        root: {\n            flexBasis: \"45%\",\n        }\n    }\n}))\n\nconst ListItem = ({data}: {data: Product}) => {\n    const history = useHistory();\n    const theme = useTheme();\n    const classes = useStyles({available: data.available, theme});\n\n    const handleRedirect = () => {\n        history.push(`/product/${data.token}`);\n    }\n\n    return <div className={classes.root}>\n        <div className={classes.imageWrapper} onClick={handleRedirect}>\n            <img className={classes.image} src={data.media_url} alt=\"media_url\" />\n        </div>\n        <div className={classes.textWrapper}>\n        <h2 onClick={handleRedirect} className={classes.title}>{data.name}</h2>\n        <p style={{opacity: 0.5, fontSize:14}}>{data.description}</p>\n        </div>\n    </div>\n}\n\nexport default ListItem;","import React from \"react\";\nimport { createUseStyles, useTheme } from \"react-jss\";\nimport { Theme, Product } from \"../../types\";\nimport { useCommand } from \"../../api/hooks\";\nimport { ProductList } from \"../../api/commands\";\nimport { useForkedState } from \"../../utils/hooks/general\";\nimport { isLoaded } from \"../../api/utils\";\nimport Loader from 'react-loader-spinner'\nimport ListItem from \"../shared/ListItem\";\n\nlet useStyles = createUseStyles((theme: Theme) => ({\n    root: {\n        flex: 1,\n        minHeight: \"calc(100vh - 110px)\"\n    },\n    list: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        alignItems: \"base-line\",\n        justifyContent: \"flex-start\",\n        maxWidth: \"1250px\",\n        margin: \"120px auto 0\"\n    },\n    bgWrapper: {\n        position: \"absolute\",\n        width: \"100vw\",\n        maxWidth: \"100%\",\n        maxHeight: \"100%\",\n        top: 0,\n        left: 0,\n        height: \"100vh\",\n        zIndex: -1,\n        overflow: \"hidden\"\n    }\n}))\n\nconst Home = () => {\n    const listRq = useCommand(ProductList);\n    const [list] = useForkedState((rq: any) => isLoaded(rq) ? rq.data : null, listRq);\n\n    const theme = useTheme();\n    const classes = useStyles({theme});\n\n    // @ts-ignore\n    const primaryMain = theme?.palette?.primary.main;\n\n    return <div className={classes.root}>\n            {list === null && <div style={{\n                                    position: \"absolute\",\n                                    left: \"50%\",\n                                    right: \"50%\",\n                                    zIndex: 999,\n                                    width: \"100px\",\n                                    height: \"100px\"\n                                }}>\n                                <Loader color={primaryMain}\n                                type=\"TailSpin\"\n                                height={100}\n                                width={100}\n                                timeout={999999} //3 secs\n                            \n                                /></div>}\n        {/* <div className={classes.bgWrapper}><img src={backgroundImg} alt=\"bg\" /></div> */}\n        {list !== null && <div className={classes.list}>\n            {\n                list.map((e: Product) => <ListItem key={e.token + e.name} data={e} />)\n            }\n        </div>}\n    </div>\n}\n\nexport default Home;","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useCommand } from \"../../api/hooks\";\nimport { ProductInfo } from \"../../api/commands\";\nimport { useForkedState } from \"../../utils/hooks/general\";\nimport { isLoaded } from \"../../api/utils\";\n// @ts-ignore\nimport Loader from 'react-loader-spinner'\nimport { useTheme } from \"react-jss\";\n\nconst ProductPage = () => {\n    const { token } = useParams();\n    const productRq = useCommand(ProductInfo, token);\n    const [product] = useForkedState((rq: any) => isLoaded(rq) ? rq.data : null, productRq);\n    const theme: any = useTheme();\n\n    if(!product) return <Loader color={theme?.palette?.primary?.main}\n    type=\"TailSpin\"\n    height={100}\n    width={100}\n    timeout={999999} //3 secs\n    // @ts-ignore\n    style={{position: \"absolute\",left: \"50%\",right: \"50%\",zIndex: 999}}\n    />\n    \n    if(productRq && productRq.status !== 200) return <p>Product not found</p>\n    \n    return <div>\n        <h2>{product.name}</h2>\n        <p style={{opacity: 0.6}}>{product.description}</p>\n    </div>\n}\n\nexport default ProductPage","import React, { useRef } from \"react\";\nimport { createUseStyles, useTheme } from \"react-jss\";\nimport { Theme } from \"../../../types\";\n\nlet useStyles = createUseStyles((theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n        flexBasis: (props: any) => props.fluid ? \"100%\" : \"40%\",\n        width: (props: any) => props.fluid ? \"100%\" : \"40%\",\n        position: \"relative\",\n        marginBottom: \"10px\",\n        padding: \"0 6px\",\n    },\n    input: {\n        width: \"calc(100% - 14px)\",\n        background: \"transparent\",\n        outline: 0,\n        padding: \"12px 6px\",\n        border: \"1px solid #eee\",\n        borderRadius: \"4px\",\n        \"&:focus\": {\n            borderColor: theme.palette.primary.main\n        }\n    }\n}));\n\nconst useTimeout = () => {\n    const ref = useRef(null as unknown as [number|undefined, Function]);\n\n    if(ref.current === null) {\n        const createTimeout = (fn: Function, ms: number) => {\n            if(ref.current[0]) clearTimeout(ref.current[0]);\n            const timeout = setTimeout(fn, ms);\n            ref.current[0] = timeout;\n        }\n\n        ref.current = [ undefined, createTimeout ];\n    }\n\n    return ref.current;\n}\n\nconst Input = ({initialValue, onChange, InputProps, fluid=false}: { fluid?: boolean, initialValue?: string, onChange?: (value: string) => void, InputProps: React.HTMLProps<HTMLInputElement> }) => {\n    //const [value, setValue] = useState(initialValue || \"\");\n    const ref = useRef(null);\n\n    const theme = useTheme();\n    const classes = useStyles({theme, fluid});\n\n    const [, doTimeout] = useTimeout();\n\n    const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n        event.preventDefault();\n\n        //setValue(event.currentTarget.value);\n        doTimeout(() => onChange && onChange(event.currentTarget.value), 2000);\n    }\n\n    return <div className={classes.root}><input className={classes.input} onChange={handleChange} ref={ref} {...InputProps} /></div>\n}\n\nexport default Input;","import React from \"react\";\nimport { createUseStyles, useTheme } from \"react-jss\";\nimport { Theme } from \"../../../types\";\nimport Input from \"./Input\";\n\nlet useStyles = createUseStyles((theme: Theme) => ({\n    root: {\n        \n    },\n}));\n\nconst Form = ({children, onSubmit}: { children: React.ReactNode, onSubmit: (event: React.FormEvent<HTMLFormElement>) => void }) => {\n    const theme = useTheme();\n    const classes = useStyles({theme});\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        onSubmit && onSubmit(event);\n    }\n\n    return <form className={classes.root} onSubmit={handleSubmit}>\n            {children}\n        </form>\n}\n\nForm.Input = Input;\n\nexport default Form;","import React from \"react\";\nimport { createUseStyles, useTheme } from \"react-jss\";\nimport { Theme } from \"../../types\";\nimport { Form } from \"../shared/Form\";\nimport { Client } from \"../../api/client\";\nimport config from \"../../config\";\nimport { ProductCreate } from \"../../api/commands\";\n\nlet useStyles = createUseStyles((theme: Theme) => ({\n    root: {\n        padding: \"0 15px\"\n    },\n    flex: {\n        display: \"flex\",\n        alignItems: \"baseline\",\n        flexWrap: \"wrap\",\n    }\n}));\n\ntype InputProperties = {\n    name: string;\n    description: string;\n    url: string;\n    media_url: string;\n}\n\nconst makeDataFromInput = (target: any) => {\n    const properties = [\"name\", \"description\", \"url\", \"media_url\"];\n    const data: {[key: string]: string} = {};\n\n    properties.forEach((property) => {\n        data[property] = target.querySelector(`input[name=\"product_${property}\"]`).value as string;\n    })\n\n    return data as InputProperties;\n}\n\nconst AdminPage = () => {\n    const theme = useTheme();\n    const classes = useStyles({theme});\n\n    const handleSubmit = (e: any) => { // e: React.FormEvent<HTMLFormElement>\n        e.preventDefault();\n\n        const data = makeDataFromInput(e.target);\n\n        const cli = new Client(config.host_url);\n        cli.execute(new ProductCreate(data));\n    }\n\n    return <div className={classes.root}>\n        <h4>Dodaj nowy produkt do wyprawki</h4>\n        <Form onSubmit={handleSubmit}>\n            <div className={classes.flex}>\n                <Form.Input fluid={true} InputProps={{placeholder: \"Nazwa produktu\", name: \"product_name\"}} onChange={console.log} />\n                <Form.Input fluid={true} InputProps={{placeholder: \"Opis produktu\", name: \"product_description\"}} onChange={console.log} />\n                <Form.Input InputProps={{placeholder: \" Link do produktu\", name: \"product_url\"}} onChange={console.log} />\n                <Form.Input InputProps={{placeholder: \"Zdjęcie produktu\", name: \"product_media_url\"}} onChange={console.log} />\n            </div>\n            <button style={{margin: \"0 6px\"}}>Dodaj</button>\n        </Form>\n    </div>\n}\n\nexport default AdminPage;","import Home from \"./components/pages/Home\";\nimport ProductPage from \"./components/pages/ProductPage\";\nimport { RouteProps, RouteComponentProps } from \"react-router-dom\";\nimport AdminPage from \"./components/pages/AdminPage\";\n\ntype Page = {\n    path: string;\n    exact: boolean;\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n\n    label: string;\n    \n    exactPath?: string;\n    params?: string;\n    pattern?: RegExp;\n    pathTree: string[];\n\n    routeProps: RouteProps;\n};\n\nexport default Object.freeze([\n    {\n        id: \"home-01\",\n        path: \"/\",\n        pattern: new RegExp(\"/\"),\n\n        label: \"Home\",\n        pathTree: [\"Home\"],\n\n        exact: true,\n        component: Home,\n\n        get routeProps() { return { path: this.path, exact: this.exact, component: this.component }},\n    },\n    {\n        id: \"product-01\",\n        exactPath: \"/product\",\n        params: \":token\",\n        pattern: /\\/product\\/[A-Z-a-z-0-9]*/,\n        get path() {\n            return this.exactPath + \"/\" + this.params;\n        },\n\n        label: \"Product\",\n        pathTree: [\"Home\", \"Product\"],\n\n        exact: false,\n        component: ProductPage,\n\n        get routeProps() { return { path: this.path, exact: this.exact, component: this.component }},\n    },\n    {\n        id: \"admin-01\",\n        path: \"/admin\",\n        pattern: new RegExp(\"/admin\"),\n        exact: true,\n        label: \"Admin Dashboard\",\n        pathTree: [\"Home\", \"Admin\"],\n        component: AdminPage,\n        get routeProps() { return { path: this.path, exact: this.exact, component: this.component }},\n    }\n]) as Readonly<Page[]>;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"react-jss\";\nimport { Theme } from '../types';\nimport AppBar from './common/AppBar';\nimport pages from '../pages';\n\nconst theme: Theme = {\n  palette: {\n    primary: {\n      main: \"#7bc69f\"\n    }\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Router>\n          <AppBar />\n          <Switch>\n            {\n              pages.map(p => <Route key={p.path + p.label} {...p.routeProps} />)\n            }\n            <Route component={() => <h4>ErrorPage</h4>} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}